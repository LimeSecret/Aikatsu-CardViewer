<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Hyecdz9jYWjGAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGQAAABkCAYAAABw4pVUAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EwAACxMBAJqcGAAAB/hJREFUeF7tlkGOHEUURH0GbgLs2SKQWLI1YmMOAOIacAXuBeICZgEYybIsDRPN
        RBMTjp+ZVV3dXVXdTwp15c+fmf//mMW8eNghL15st61dGgK2aspuDQFbNOVuyMrYtSFga6bs3hCwJVPu
        hqyMmzAEbMWUuyEr41glCqaUtE7inuN5qktzjTencqhQB+TD6jXhZ53e+UuyploqDhV6obruNYF95qTc
        3vlLsqZaKg4VeqG6robsYtxJsWuxploqDhV6oboeGTLWlKN7rktzjTencqjQC9V1aqLKT7lKb//cXPv9
        EQ4VolAdqhaemvB9rlOu0ts/N9d+f4RjhRysF52a8Fz/JZpX6VJc8q1T6FY50ghz1tz0nNpwZlRLsd4J
        LsyUoX3/8otDPn5HtZQxd0OENOipOtWYuyGPpMGeqrnG3IQhc8zAmRTviUbwPL9HuWlDfJgqHWpLzOvl
        Y2+EmzAkwUHpN9cJzaFoQMsI1Ygpxwwkq0jrEt9LaxXxdWLuvsd76wrkqUA1ZP3tiXdVHHb5qIt7Fb43
        movvkdzR+xSP67p1n9K6w4ebvishx+92uhW2LvC9Xq5LmRNPVHmtfIp4rq59wK21i/t+v/JsB4kUqQ57
        HmjlKtXZnhRfk5Q3JVfhWY1rDEoDb4nnKo47nsR1dYHuE89rnU3xKVTnPc51K1+lVGcUPcuBuwkqzUsc
        o57AdTo4JZfoXpU3JT6aq+vWHuiteyCfciNUzEkco57AdTo4JZfoXpWHeCXHY1xXcaLrXu5ccE8yQlW9
        9SyKJIr4weoiUO2lO1Mu40lOtZ/WTsqnFF9PAWeTEVR6D3RfnFJUfEBiXsSUu0c5x51zQS3JDCrVup7q
        F2DUDAzjEty0ISNm+DBGDTyFlimphpsxpDWEc4P31AjVLg2ZYkYF9lxLwfvUiKqmTRvSGpwOoJUH0n7v
        zBRwj5qg+uDdp9/N0RqWDgDfrVyg+5rfO+foWQUxNUHl+dNeXAlV48Cbr/Ic3qn5o2eBn1UQ15pUfmb8
        xRUyMoAqR2ndMwpz8evnsFYTtLYPcp9+N4k3o+gQWnkg7SPWO0c8189hrUawJs8DYy+ulNQQYcOtHOI5
        o+eI5qazWLsZ/HXGX10psanHGDUKc6tzjKf91h5AbMQMkKMbQhvDd6/hCp6t4F4vz0Gum6FrZ1rVK4RN
        eeOp2SWYejfzITWDdTp3Q85Mqk/lda7OEA6T6qE5+GaTI2cvCWtLetbD0+9q8GH62vE9rNlk69woPjxq
        Cqwpyet8/D696DmwkKRElePfkDa7BDrAOWhNqlTfIbJU4S3wRtJc0h347jU8F9w3B69J5fWD44qb59Q5
        0HvxnZpeAtw1h1QThT2v7zxTuiBsSpUaPwXeM4WqFlWqa/OGJJY0Re8YpWeEyuu6GUPY/Kgx6TyV4N3V
        2y1pTbszZGQgOjwn5UB6Hvrhmy8ffvz2q27eiHCO3KQhKh2mS0n70F9//nn4/e7nTw+/6Y2WcEa5eUMo
        nIN++/XXD4YEUgz88fr1Ye/VTx8fftPdleI7T7+7AA1WQ2kNywcTBxVi79+/P8Rhhhui35XiO0+/m6c1
        GEpj/OZaSWuPAcT4pr7LfH2Dcf1ObN4QNq+D4XA0jm8Ogt9pMNxXfE0Qr97EL9/Qt/SbPPt++t0kbL4n
        5ulvGgzAmiKeAxB79dMnz974L/b/N9/gO+ltimzWEDTx9+9fHwfSEpvWtQ7l888+O94J6bfGwLt37w5r
        /FeV7tdfvsF3PB9yNmkIGplqBpTiMIPSXNU/b948vH379lleut/jlSGa42zKEDY9aoZKB4JvNYJDhvgO
        fz0Xa7/XY7q3W0PY+BwzIB0IvnXIHDRFPA9rvUPXlZBTGcJ9ZROGsJm5ZkA6EHzroDlsinie5ujdPbXy
        saes3hA2c4oZFO/CbzVoiO9Cnse7UI+K8anie2QThixhBlUNmuKbnsM83uM1qTlT6uWbZNWGcABTGhyR
        Dtu/KcZUiON8Gr7WqN894U5ltYZo897EqdKBV8N3sR7X3ZAFdE5DptaLfGWVhmjzSxviZswxBDVRevec
        WnFGWbUhqemWmO/SHDdEh96SGrKkUJ+yG0OY29MphqT7klJ9lZCvrM4Q/Uuc0pwOpCU3ZMSUKWZQqcYk
        5Cq7MuSXlx915QaMmDLHECjV6UKeshtD0vCT5hqS7qrEO1WpZvan3A15GpjGXNhPd7l4V6ovadeGjCgN
        nkP0uKo3ZN6R9lq6GxIGz2F6nNJ6mOt3pviI7oY83p0GnuIU68EvYawV78l7I3dDHmMpTrEe/JIUI9zr
        abeGIH90CMirhp7iEO/GL9H3NE50Pyn1RTZrCPIonhuVD7za030HMdbhcM+FfqqeyOoNSQ2kIbRAvp7R
        dbXnSqCWCpxhveyj6kXvzy9dEW0E0ia8+BF6Z1r73FONwvxkROu+ad1dABSpxbOhVHyPqmllNIeM5BPk
        aS8jZ8duviDeBDTXEMJBpDtae6AVr/YU5o3kgrGsC4Pi1ZBeM9p0Tw5jaQ9UcdK6t3c2Mf3EhUAzUwxR
        OAxXgvEqpzrn8Hx1zyjzT14ANDbHEKCDqc5rTkVvn/CukTtbzD95IaY26PmnDAfwvuqetF/ljnBatRci
        NZ3wfT13ikjaoxRfT2H+ySuRBpA4ZSjK6D1a1ylvL1P1FeAAVBpfiql3nfr+Zg1ROIAljbgWm++Af5F7
        MAPso4sdcTdkVTw8/Ast53DHXJ91xgAAAABJRU5ErkJggg==
</value>
  </data>
</root>